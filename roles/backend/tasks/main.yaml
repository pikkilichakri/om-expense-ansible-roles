- name: Disable default Node.js module
  ansible.builtin.command: dnf module disable nodejs -y

- name: Enable Node.js 20 module
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: Install Node.js and MySQL
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - nodejs
    - mysql

- name: Create expense user
  ansible.builtin.user:
    name: expense

- name: Include tasks from the common role
  include_role:
    name: common
    tasks_from: main

# - name: Create app directory
#   ansible.builtin.file:
#     path: /app
#     state: directory

# - name: Download the backend code
#   ansible.builtin.get_url:
#     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#     dest: /tmp/backend.zip

# - name: Extract the backend code
#   ansible.builtin.unarchive:
#     src: /tmp/backend.zip
#     dest: /app
#     remote_src: yes

- name: Install dependencies
  ansible.builtin.command: npm install
  args:
    chdir: /app

- name: Copy backend service template
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: Install Python dependencies
  ansible.builtin.pip:
    name:
      - PyMySQL
      - cryptography
    executable: pip3.9

- name: Import MySQL data
  community.mysql.mysql_db:
    state: import
    name: all
    target: /app/schema/backend.sql
    login_host: "{{ MYSQL_HOST }}"
    login_user: "{{ MYSQL_USER }}"
    login_password: "{{ MYSQL_PASSWORD }}"

- name: Reload and restart backend service
  ansible.builtin.systemd:
    enabled: true
    state: restarted
    daemon_reload: true
    name: backend
